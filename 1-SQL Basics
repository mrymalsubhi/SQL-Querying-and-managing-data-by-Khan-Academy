this lesson is divided in 3 challenges and 1 projects.

1.1 Challenge: Book list database
/* Step 1: What are your favorite books? You can make a database table to store them in! In this first step, create a table to store your list of books. It should have columns for id, name, and rating. */
CREATE TABLE books (id INTEGER PRIMARY KEY, book_name TEXT, rating INTEGER );
INSERT INTO books VALUES (1, "My Wish List", 5);
INSERT INTO books VALUES (2, “Sweet Bean Paste", 4);
INSERT INTO books VALUES (3, “Endless night”, 4);
INSERT INTO books VALUES (4, “White Nights”, 4);
INSERT INTO books VALUES (5, “Turtle All The Way Down”, 3.5);

SELECT * FROM books;

1.2 Challenge: Box office hits database 

/* This database contains an incomplete list of box office hits and their release year. In this challenge, you're going to get the results back out of the database in different ways! */
CREATE TABLE movies (id INTEGER PRIMARY KEY, name TEXT, release_year INTEGER);
INSERT INTO movies VALUES (1, "Avatar", 2009);
INSERT INTO movies VALUES (2, "Titanic", 1997);
INSERT INTO movies VALUES (3, "Star Wars: Episode IV - A New Hope", 1977);
INSERT INTO movies VALUES (4, "Shrek 2", 2004);
INSERT INTO movies VALUES (5, "The Lion King", 1994);
INSERT INTO movies VALUES (6, "Disney's Up", 2009);

/* Step 1: In this first step, just select all the movies.*/ 
SELECT * FROM movies;

/* Step 2: Now, add a second query after the first, that retrieves only the movies that were released in the year 2000 or later, not before. Sort the results so that the earlier movies are listed first. You should have 2 SELECT statements after this step. */
SELECT * FROM movies WHERE release_year > 2000 order by release_year;


1.3 Challenge: TODO list database stats 
CREATE TABLE todo_list (id INTEGER PRIMARY KEY, item TEXT, minutes INTEGER);
INSERT INTO todo_list VALUES (1, "Wash the dishes", 15);
INSERT INTO todo_list VALUES (2, "vacuuming", 20);
INSERT INTO todo_list VALUES (3, "Learn some stuff on KA", 30);

/* Step 1:  Here’s a table containing a TODO list with the number of minutes it will take to complete each item. Insert another item to your todo list with the estimated minutes it will take. */ 

INSERT INTO todo_list VALUES (4, "laundry", 45);

/* Step 2: Select the SUM of minutes it will take to do all of the items on your TODO list. You should only have one SELECT statement. */
select SUM(minutes) from todo_list;
